// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  STUDENT
}

model User {
  id        Int      @id @default(autoincrement())
  citizenId String   @unique
  hash      String
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile Profile @relation(fields: [citizenId], references: [citizenId])
}

model Profile {
  id        Int      @id @default(autoincrement())
  citizenId String   @unique
  name      String
  code      Int
  groupId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User?
  group   Group        @relation(fields: [groupId], references: [id])
  results TestResult[]
}

model Group {
  id             Int      @id @default(autoincrement())
  grade          Int
  branch         String
  organizationId Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  organization Organization @relation(fields: [organizationId], references: [id])
  profiles     Profile[]
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  groups Group[]
  tests  TestOnOrganization[]
}

model Test {
  id        Int      @id @default(autoincrement())
  name      String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  organizations TestOnOrganization[]
  results       TestResult[]
}

model TestOnOrganization {
  testId         Int
  organizationId Int

  test         Test         @relation(fields: [testId], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])

  @@id([testId, organizationId])
}

model TestResult {
  id        Int      @id @default(autoincrement())
  testId    Int
  profileId Int
  score     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  test    Test    @relation(fields: [testId], references: [id])
  profile Profile @relation(fields: [profileId], references: [id])
}
